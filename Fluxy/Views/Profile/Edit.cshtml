@model Fluxy.ViewModels.User.UserMangementViewModel
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Account Settings";
}
<div class="container">
    @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { @id = "profileForm", @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Account Settings</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Firstname,  htmlAttributes: new { @class = "form-control"  })
                    <small>@Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })</small>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Lastname, htmlAttributes: new { @class = "form-control" } )
                    <small>@Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })</small>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(model => model.Gender, "Male")
                        Male
                    </label>

                    <label class="form-check-label">
                        @Html.RadioButtonFor(model => model.Gender, "Female")
                        Female
                    </label>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Dob, "{0:yyyy-MM-dd}", new { @class = "form-control", @Onchange = "DateChange(event)", @type = "date" })
                    <small>@Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })</small>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Age,htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    <small>@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })</small> 
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.About, htmlAttributes:new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Hobbies, htmlAttributes:new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Bio, htmlAttributes:new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DisplayPicture, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-4">
                            <input type="file" class="form-control-file" name="fileBase" id="dpSelecter" value="fileBase" aria-describedby="fileHelp">
                            <small id="fileHelp" class="form-text text-muted">Select image file for your Display picture!</small>
                        </div>
                        <div class="col-md-4">
                            @if (!string.IsNullOrEmpty(Model?.DisplayPictureString))
                            {
                            <img src="data:image/png;base64,@Model.DisplayPictureString" data-src="holder.js/140x140" alt='Avatar' id="displayPicture" class="img-thumbnail  m-x-auto img-fluid img-responsive">
                            }
                            else
                            {
                            <img src="//placehold.it/150" data-src="holder.js/140x140" id="displayPictureChange" class="img-thumbnail m-x-auto img-fluid img-responsive" alt="avatar">
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <small>@Html.ActionLink("Cancel", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-link" })</small>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/Custom/ProfileEdit.min.js"></script>