@model Fluxy.ViewModels.Video.VideoAttributesViewModel

@if (Model != null)
{
    <div class="video-card card">
        <p class="text-center wow bounceInDown" data-toggle="tooltip" data-placement="top" title="Video Title"> @Model.Title</p>
        <a class="video-thumbnail wow zoomInDown" href="@Url.Action("Index", "Video", routeValues: new { videoId = Model.Id, title = Model.Slug })">
            @if (!string.IsNullOrEmpty(Model.ThumbunailString))
            {
                <img src="data:image/png;base64,@Model.ThumbunailString" data-src="holder.js/340x240" alt='@Model.Title' class="img-thumbnail img-responsive">
            }
            else
            {
                <img src="//placehold.it/340x240" data-src="holder.js/340x240" alt='Thumbnail' class="img-thumbnail img-responsive">
            }
        </a>
        <div class="row  wow bounceInRight">
            <a href="@Url.Action("Index","Profile",routeValues:new {userId=Model.UserId })" class="col-md-4" data-toggle="tooltip" data-placement="top" title="Added by">
                <span>
                    <i class="fa fa-user" aria-hidden="true"></i> @Model.ApplicationUser.UserName
                </span>
            </a>
            <div class="col-md-4" data-toggle="tooltip" data-placement="top" title="Views Count">
                <span><i class="fa fa-eye" aria-hidden="true"></i> @Model.ViewCount</span>
            </div>
            <div class="col-md-4" data-toggle="tooltip" data-placement="top" title="Tags">
                <span><i class="fa fa-tags" aria-hidden="true"></i> @Model.Tags</span>
            </div>
        </div>
    </div>
}